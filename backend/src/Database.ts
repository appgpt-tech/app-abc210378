//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { GamesEntity } from './db/Games.entity';
import { UsersEntity } from './db/Users.entity';
import { WalletsEntity } from './db/Wallets.entity';
import { TransactionsEntity } from './db/Transactions.entity';
import { ControllerEntity } from './db/Controller.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      GamesEntity,
      UsersEntity,
      WalletsEntity,
      TransactionsEntity,
      ControllerEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Games: [
        {
          gameName: 'gameName 1',
          gameType: 'gameType 1',
          minimumBet: 0.01,
          maximumBet: 0.54,
          description: 'description 1',
          id: 25,
        },
        {
          gameName: 'gameName 2',
          gameType: 'gameType 2',
          minimumBet: 0.49,
          maximumBet: 0.59,
          description: 'description 2',
          id: 88,
        },
        {
          gameName: 'gameName 3',
          gameType: 'gameType 3',
          minimumBet: 0.8,
          maximumBet: 0.92,
          description: 'description 3',
          id: 33,
        },
        {
          gameName: 'gameName 4',
          gameType: 'gameType 4',
          minimumBet: 0.6,
          maximumBet: 0.06,
          description: 'description 4',
          id: 60,
        },
        {
          gameName: 'gameName 5',
          gameType: 'gameType 5',
          minimumBet: 0.51,
          maximumBet: 0.34,
          description: 'description 5',
          id: 40,
        },
      ],
      Users: [
        {
          username: 'username 1',
          email: 'email 1',
          password: 'password 1',
          dateOfRegistration: '2024-09-20T00:45:24.064Z',
          age: 1,
          balance: 0.3,
          id: 36,
        },
        {
          username: 'username 2',
          email: 'email 2',
          password: 'password 2',
          dateOfRegistration: '2024-11-04T12:04:01.322Z',
          age: 2,
          balance: 0.22,
          id: 56,
        },
        {
          username: 'username 3',
          email: 'email 3',
          password: 'password 3',
          dateOfRegistration: '2024-06-26T05:19:16.223Z',
          age: 3,
          balance: 0.04,
          id: 66,
        },
        {
          username: 'username 4',
          email: 'email 4',
          password: 'password 4',
          dateOfRegistration: '2024-02-15T06:51:19.116Z',
          age: 4,
          balance: 0.5,
          id: 58,
        },
        {
          username: 'username 5',
          email: 'email 5',
          password: 'password 5',
          dateOfRegistration: '2023-10-14T18:04:23.634Z',
          age: 5,
          balance: 0.94,
          id: 14,
        },
      ],
      Wallets: [
        {
          userId: 1,
          balance: 0.54,
          currency: 'currency 1',
          lastTransactionDate: '2024-04-08T00:37:18.005Z',
          id: 73,
        },
        {
          userId: 2,
          balance: 0.51,
          currency: 'currency 2',
          lastTransactionDate: '2023-06-14T06:20:17.568Z',
          id: 10,
        },
        {
          userId: 3,
          balance: 0.51,
          currency: 'currency 3',
          lastTransactionDate: '2025-03-22T15:30:51.645Z',
          id: 56,
        },
        {
          userId: 4,
          balance: 0.41,
          currency: 'currency 4',
          lastTransactionDate: '2023-06-18T09:26:12.669Z',
          id: 8,
        },
        {
          userId: 5,
          balance: 0.15,
          currency: 'currency 5',
          lastTransactionDate: '2023-05-06T10:47:24.732Z',
          id: 1,
        },
      ],
      Transactions: [
        {
          transactionId: 'transactionId 1',
          userId: 1,
          type: 'type 1',
          amount: 0.72,
          currency: 'currency 1',
          dateTime: '2023-06-10T10:20:56.825Z',
          status: 'status 1',
          id: 37,
        },
        {
          transactionId: 'transactionId 2',
          userId: 2,
          type: 'type 2',
          amount: 0.74,
          currency: 'currency 2',
          dateTime: '2024-06-18T04:03:06.174Z',
          status: 'status 2',
          id: 11,
        },
        {
          transactionId: 'transactionId 3',
          userId: 3,
          type: 'type 3',
          amount: 0.57,
          currency: 'currency 3',
          dateTime: '2024-11-10T22:59:15.316Z',
          status: 'status 3',
          id: 66,
        },
        {
          transactionId: 'transactionId 4',
          userId: 4,
          type: 'type 4',
          amount: 0.18,
          currency: 'currency 4',
          dateTime: '2024-05-23T07:28:52.050Z',
          status: 'status 4',
          id: 76,
        },
        {
          transactionId: 'transactionId 5',
          userId: 5,
          type: 'type 5',
          amount: 0.3,
          currency: 'currency 5',
          dateTime: '2023-07-19T23:47:02.494Z',
          status: 'status 5',
          id: 2,
        },
      ],
      Controller: [
        {
          controllerId: 'controllerId 1',
          gameId: 1,
          userId: 1,
          betAmount: 0.22,
          winAmount: 0.76,
          outcome: 'outcome 1',
          dateTime: '2025-03-14T06:27:24.007Z',
          id: 83,
        },
        {
          controllerId: 'controllerId 2',
          gameId: 2,
          userId: 2,
          betAmount: 0.14,
          winAmount: 0.62,
          outcome: 'outcome 2',
          dateTime: '2025-01-02T15:58:56.741Z',
          id: 24,
        },
        {
          controllerId: 'controllerId 3',
          gameId: 3,
          userId: 3,
          betAmount: 0.44,
          winAmount: 0.04,
          outcome: 'outcome 3',
          dateTime: '2024-01-09T15:58:37.649Z',
          id: 62,
        },
        {
          controllerId: 'controllerId 4',
          gameId: 4,
          userId: 4,
          betAmount: 0.03,
          winAmount: 0.68,
          outcome: 'outcome 4',
          dateTime: '2025-01-27T15:25:31.240Z',
          id: 80,
        },
        {
          controllerId: 'controllerId 5',
          gameId: 5,
          userId: 5,
          betAmount: 0.83,
          winAmount: 0.05,
          outcome: 'outcome 5',
          dateTime: '2024-03-07T11:27:58.770Z',
          id: 59,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('GamesEntity', data.Games);
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('WalletsEntity', data.Wallets);
      await this.SeedResource('TransactionsEntity', data.Transactions);
      await this.SeedResource('ControllerEntity', data.Controller);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
