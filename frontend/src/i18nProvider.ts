//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Games: {
      name: 'Games',
      fields: {
        gameName: 'Game Name',
        gameType: 'Game Type',
        minimumBet: 'Minimum Bet',
        maximumBet: 'Maximum Bet',
        description: 'Description',
        id: 'id',
      },
    },
    Users: {
      name: 'Users',
      fields: {
        username: 'Username',
        email: 'Email',
        password: 'Password',
        dateOfRegistration: 'Date Of Registration',
        age: 'Age',
        balance: 'Balance',
        id: 'id',
      },
    },
    Wallets: {
      name: 'Wallets',
      fields: {
        userId: 'User Id',
        balance: 'Balance',
        currency: 'Currency',
        lastTransactionDate: 'Last Transaction Date',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions',
      fields: {
        transactionId: 'Transaction Id',
        userId: 'User Id',
        type: 'Type',
        amount: 'Amount',
        currency: 'Currency',
        dateTime: 'Date Time',
        status: 'Status',
        id: 'id',
      },
    },
    Controller: {
      name: 'Controller',
      fields: {
        controllerId: 'Controller Id',
        gameId: 'Game Id',
        userId: 'User Id',
        betAmount: 'Bet Amount',
        winAmount: 'Win Amount',
        outcome: 'Outcome',
        dateTime: 'Date Time',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Games: {
      name: 'Games (fr)',
      fields: {
        gameName: 'Game Name (fr)',
        gameType: 'Game Type (fr)',
        minimumBet: 'Minimum Bet (fr)',
        maximumBet: 'Maximum Bet (fr)',
        description: 'Description (fr)',
        id: 'id',
      },
    },
    Users: {
      name: 'Users (fr)',
      fields: {
        username: 'Username (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        dateOfRegistration: 'Date Of Registration (fr)',
        age: 'Age (fr)',
        balance: 'Balance (fr)',
        id: 'id',
      },
    },
    Wallets: {
      name: 'Wallets (fr)',
      fields: {
        userId: 'User Id (fr)',
        balance: 'Balance (fr)',
        currency: 'Currency (fr)',
        lastTransactionDate: 'Last Transaction Date (fr)',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions (fr)',
      fields: {
        transactionId: 'Transaction Id (fr)',
        userId: 'User Id (fr)',
        type: 'Type (fr)',
        amount: 'Amount (fr)',
        currency: 'Currency (fr)',
        dateTime: 'Date Time (fr)',
        status: 'Status (fr)',
        id: 'id',
      },
    },
    Controller: {
      name: 'Controller (fr)',
      fields: {
        controllerId: 'Controller Id (fr)',
        gameId: 'Game Id (fr)',
        userId: 'User Id (fr)',
        betAmount: 'Bet Amount (fr)',
        winAmount: 'Win Amount (fr)',
        outcome: 'Outcome (fr)',
        dateTime: 'Date Time (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
